[Unit]
Description=Minecraft Server
Documentation=https://minecraft.fandom.com/wiki/Tutorials/Server_startup_script
Requires=minecraft.socket
# NOTE: zfs-export.service included here only to ensure the **stop** happens before the export
After=network.target minecraft.socket zfs-export.service
RequiresMountsFor=/srv/mcdata/

[Service]
WorkingDirectory=/srv/mcdata/

# Solves the issue where the minecraft server will endlessly restart itself
# See https://askubuntu.com/questions/953920/systemctl-service-timed-out-during-start for more info
Type=simple

PrivateUsers=true
# Users Database is not available from within the unit, only root and minecraft is available, everybody else is nobody

User=minecraft
Group=minecraft

ProtectSystem=full
# Read only mapping of /usr /boot and /etc

ProtectHome=true
# /home, /root and /run/user seem to be empty from within the unit. It is recommended to enable this setting for all long-running services (in particular network-facing ones).

ProtectKernelTunables=true
# /proc/sys, /sys, /proc/sysrq-trigger, /proc/latency_stats, /proc/acpi, /proc/timer_stats, /proc/fs and /proc/irq will be read-only within the unit. It is recommended to turn this on for most services.
# Implies MountFlags=slave

ProtectKernelModules=true
# Block module system calls, also /usr/lib/modules. It is recommended to turn this on for most services that do not need special file systems or extra kernel modules to work
# Implies NoNewPrivileges=yes

ProtectControlGroups=true
# It is hence recommended to turn this on for most services.
# Implies MountAPIVFS=yes

# FIXME: Do some sort of rotation on the logs in /srv/mcdata/logs
#        Turn them off somehow?

# FIXME: This data initialisation should probably be a separate unit file
# Make the directories required for the symlinks
ExecStartPre=mkdir -p /srv/mcdata/plugins
ExecStartPre=mkdir -p /srv/mcdata/world/datapacks
# This will follow symlinks, searching for symlinks. Which will actually find broken symlinks
ExecStartPre=find -L /srv/mcdata/world/datapacks /srv/mcdata/plugins/ -xdev -type l -ls -delete
# Symlink all the included files from /usr/lib/minecraft
ExecStartPre=find /usr/lib/minecraft/plugins -type f -not -name 'paperclip.jar' -name '*.jar' -exec ln -sfv -t /srv/mcdata/plugins {} +
ExecStartPre=find /usr/lib/minecraft/datapacks -type f -name '*.zip' -exec ln -sfv -t /srv/mcdata/world/datapacks {} +

# FIXME: Make sense of all these arguments and figure out what ones to use for max efficiency.
ExecStart=java \
          -server \
          -Xms512M \
          -Xmx3G \
          -XX:+UseG1GC \
          -XX:ParallelGCThreads=2 \
          -XX:MinHeapFreeRatio=5 \
          -XX:MaxHeapFreeRatio=10 \
          \
          -XX:+ParallelRefProcEnabled \
          -XX:MaxGCPauseMillis=200 \
          -XX:+UnlockExperimentalVMOptions \
          -XX:+DisableExplicitGC \
          -XX:+AlwaysPreTouch \
          -XX:G1NewSizePercent=30 \
          -XX:G1MaxNewSizePercent=40 \
          -XX:G1HeapRegionSize=8M \
          -XX:G1ReservePercent=20 \
          -XX:G1HeapWastePercent=5 \
          -XX:G1MixedGCCountTarget=4 \
          -XX:InitiatingHeapOccupancyPercent=15 \
          -XX:G1MixedGCLiveThresholdPercent=90 \
          -XX:G1RSetUpdatingPauseTimePercent=5 \
          -XX:SurvivorRatio=32 \
          -XX:+PerfDisableSharedMem \
          -XX:MaxTenuringThreshold=1 \
          -Dusing.aikars.flags=https://mcflags.emc.gs \
          -Daikars.new.flags=true \
          \
          -Dlog4j.configurationFile=log4j2.xml \
          -jar /usr/lib/minecraft/paperclip.jar \
          nogui

# Upstream's example used 'screen' in messy ways, I decided "fuck that" and made socket & journal work.
# NOTE: Relies on the associated .socket file
StandardInput=socket
StandardOutput=journal
StandardError=journal
# FIXME: Can I use socat or something here to avoid the need for calling out to bash for the redirection?
# FIXME: Minecraft recommends against doing a reload and would prefer a restart. Should I just leave reload out here so we are forced to restart?
ExecReload=bash -c "printf 'reload confirm\n' >%t/minecraft.stdin"
ExecStop=bash -c "printf 'say SERVER SHUTTING DOWN. Saving map...\n' 'save-all\n' >%t/minecraft.stdin"
ExecStop=sleep 1m
ExecStop=bash -c "printf 'stop\n' >%t/minecraft.stdin"

# This can take a long time to stop, mostly because of saving the chunks.
# So let's just wait longer for it
TimeoutStopSec=5min

# Java gives return code 143 when exited via kill signal, so don't count that as an error
SuccessExitStatus=143

# This is a dedicated Minecraft server, it has no other purpose in life,
# so never let the Minecraft service stay down unless the server gets shutdown.
#
# This is the only way to let the Minecraft process itself perform a "restart",
# because it won't have permission to run 'systemctl restart' and there's no Minecraft console command to exit with an 'on-failure' status
# This probably wouldn't be needed if "reload" were safe,
# but since every Minecraft plugin requires it's own reload that's just a pain in the arse.
#Restart=on-failure
Restart=always
RestartSec=60s

[Install]
WantedBy=basic.target
